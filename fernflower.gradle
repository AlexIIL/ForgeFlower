apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

version = '1.0.342-SNAPSHOT' // OurVersion.FernFlowerCommitNumber-SNAPSHOT
group = 'net.minecraftforge' //put it under us for now, because this is a unofficial mirrior
archivesBaseName = 'forgeflower'
 
sourceSets {
    main.java.srcDirs = ['src']
    test.java.srcDirs = ['test']
    java9.java.srcDirs = ['java9']
}
repositories {
    mavenCentral()   
    maven { url = "https://libraries.minecraft.net/" }
}
configurations {
    deployerJars
}

dependencies {
    // The Java9 code depends on (can see) the "main" source set
    java9Implementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.assertj:assertj-core:3.6.1'
    
    // MC test only
    testRuntime "com.mojang:patchy:1.0"
    testRuntime "oshi-project:oshi-core:1.1"
    testRuntime "net.java.dev.jna:jna:4.4.0"
    testRuntime "net.java.dev.jna:platform:3.4.0"
    testRuntime "com.ibm.icu:icu4j-core-mojang:51.2"
    testRuntime "net.sf.jopt-simple:jopt-simple:5.0.3"
    testRuntime "com.paulscode:codecjorbis:20101023"
    testRuntime "com.paulscode:codecwav:20101023"
    testRuntime "com.paulscode:libraryjavasound:20101123"
    testRuntime "com.paulscode:librarylwjglopenal:20100824"
    testRuntime "com.paulscode:soundsystem:20120107"
    testRuntime "io.netty:netty-all:4.1.9.Final"
    testRuntime "com.google.guava:guava:21.0"
    testRuntime "org.apache.commons:commons-lang3:3.5"
    testRuntime "commons-io:commons-io:2.5"
    testRuntime "commons-codec:commons-codec:1.10"
    testRuntime "net.java.jinput:jinput:2.0.5"
    testRuntime "net.java.jutils:jutils:1.0.0"
    testRuntime "com.google.code.gson:gson:2.8.0"
    testRuntime "com.mojang:authlib:1.5.25"
    testRuntime "com.mojang:realms:1.10.8"
    testRuntime "org.apache.commons:commons-compress:1.8.1"
    testRuntime "org.apache.httpcomponents:httpclient:4.3.3"
    testRuntime "commons-logging:commons-logging:1.1.3"
    testRuntime "org.apache.httpcomponents:httpcore:4.3.2"
    testRuntime "it.unimi.dsi:fastutil:7.1.0"
    testRuntime "org.apache.logging.log4j:log4j-api:2.8.1"
    testRuntime "org.apache.logging.log4j:log4j-core:2.8.1"
    testRuntime "org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209"
    testRuntime "org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209"
    testRuntime "net.java.jinput:jinput-platform:2.0.5"
    testRuntime "com.mojang:text2speech:1.10.1"
    testRuntime "ca.weblite:java-objc-bridge:1.0.0"
}

// Default all standard Java compile tasks to Java 8
// We'll specify Java 9 only for the java9 compile task
tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
    options.deprecation = true
    sourceCompatibility = 8
    targetCompatibility = 8
    options.compilerArgs.addAll(['--release', '8'])
}

compileJava9Java {
    options.encoding = 'utf-8'
    sourceCompatibility = 9
    targetCompatibility = 9
    options.compilerArgs.addAll(['--release', '9'])
}

jar {
    into('META-INF/versions/9') {
        from sourceSets.java9.output
    }
    manifest {
        attributes(
                'Main-Class' : 'org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler',
                'Multi-Release': 'true'
        )
    }
}

uploadArchives {
    repositories {
        add getProject().repositories.mavenLocal()
    }
    repositories.mavenDeployer {
        
        if (project.hasProperty('forgeMavenPass')) {
            repository(url: "http://files.minecraftforge.net/maven/manage/upload") {
                authentication(userName: "forge", password: project.getProperty('forgeMavenPass'))
            }
        } else {
            repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
            project {
                name project.archivesBaseName
                packaging 'jar'
                description 'Fernflower from https://github.com/JetBrains/intellij-community as standalone library, With Forges Modifications'
                url 'https://github.com/MinecraftForge/ForgeFlower'

                scm {
                    url 'https://github.com/MinecraftForge/ForgeFlower'
                    connection 'scm:git:git://github.com/MinecraftForge/ForgeFlower.git'
                    developerConnection 'scm:git:git@github.com:MinecraftForge/ForgeFlower.git'
                }

                issueManagement {
                    system 'github'
                    url 'https://github.com/MinecraftForge/ForgeFlower/issues'
                }

                licenses {
                    license {
                        name 'Apache License 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

