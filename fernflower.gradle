apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

version = '1.5.380-SNAPSHOT' // OurVersion.FernFlowerCommitNumber-SNAPSHOT
group = 'net.minecraftforge' //put it under us for now, because this is a unofficial mirrior
archivesBaseName = 'forgeflower'

sourceCompatibility = targetCompatibility = 8
 
sourceSets {
    main.java.srcDirs = ['src']
    test.java.srcDirs = ['test']
    java9.java.srcDirs = ['java9']
}
repositories {
    mavenCentral()   
    maven { url = "https://libraries.minecraft.net/" }
}
configurations {
    deployerJars
}

dependencies {
    // The Java9 code depends on (can see) the "main" source set
    java9Implementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }

    testCompile 'junit:junit:4.+'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.assertj:assertj-core:3.+'
    testCompile 'com.google.code.gson:gson:2.8.0'
}

// Default all standard Java compile tasks to Java 8
// We'll specify Java 9 only for the java9 compile task
tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
    options.deprecation = true
    sourceCompatibility = 8
    targetCompatibility = 8
    options.compilerArgs.addAll(['--release', '8'])
}

compileJava9Java {
    options.encoding = 'utf-8'
    sourceCompatibility = 9
    targetCompatibility = 9
    options.compilerArgs.addAll(['--release', '9'])
}

eclipse {
    classpath {
        sourceSets -= [sourceSets.java9]
    }
    project {
        name 'ForgeFlower'
    }
}

jar {
    into('META-INF/versions/9') {
        from sourceSets.java9.output
    }
    manifest {
        attributes(
                'Main-Class' : 'org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler',
                'Multi-Release': 'true'
        )
    }
}

uploadArchives {
    repositories {
        add getProject().repositories.mavenLocal()
    }
    repositories.mavenDeployer {
        
        if (project.hasProperty('forgeMavenPass')) {
            repository(url: "http://files.minecraftforge.net/maven/manage/upload") {
                authentication(userName: "forge", password: project.getProperty('forgeMavenPass'))
            }
        } else {
            repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
            project {
                name project.archivesBaseName
                packaging 'jar'
                description 'Fernflower from https://github.com/JetBrains/intellij-community as standalone library, With Forges Modifications'
                url 'https://github.com/MinecraftForge/ForgeFlower'

                scm {
                    url 'https://github.com/MinecraftForge/ForgeFlower'
                    connection 'scm:git:git://github.com/MinecraftForge/ForgeFlower.git'
                    developerConnection 'scm:git:git@github.com:MinecraftForge/ForgeFlower.git'
                }

                issueManagement {
                    system 'github'
                    url 'https://github.com/MinecraftForge/ForgeFlower/issues'
                }

                licenses {
                    license {
                        name 'Apache License 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

